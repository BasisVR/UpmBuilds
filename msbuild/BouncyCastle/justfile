git_repo := "https://github.com/bcgit/bc-csharp.git"
git_ref := "release-2.5.0"
dll_name := "BouncyCastle.Cryptography.dll"
dotnet_framework := "netstandard2.0"
csproj_relative_path := "crypto" / "src" / "BouncyCastle.Crypto.csproj"
out_dir := invocation_directory() / "build"

working_dir := `mktemp -d`
repo_dir := working_dir / "repo"
dotnet_artifact_dir := working_dir / "dotnet_artifacts"
upm_contents_dir := working_dir / "upm_contents"
csproj_path := repo_dir / csproj_relative_path

default: assemble_upm

# Clean build outputs
clean:
    rm -rf {{working_dir}}

clone:
    git clone --single-branch --branch {{git_ref}} {{git_repo}} {{repo_dir}}

build: clone
    dotnet build {{csproj_path}} --configuration Release -o {{dotnet_artifact_dir}} --framework {{dotnet_framework}}

assemble_upm: clone build && clean
    mkdir -p {{upm_contents_dir}}
    cp {{dotnet_artifact_dir / dll_name}} {{upm_contents_dir}}
    cp package.json {{upm_contents_dir}}
    cp *.meta {{upm_contents_dir}}
    mkdir -p {{out_dir}}
    npm pack --pack-destination {{out_dir}} {{upm_contents_dir}}
